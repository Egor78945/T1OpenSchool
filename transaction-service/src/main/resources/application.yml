spring:
  application:
    name: transaction-service
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT_INNER}/${POSTGRES_DATABASE_NAME}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}

  liquibase:
    change-log: db/changelog/main/main-changelog.yml
    enabled: true

  kafka:
    bootstrap-servers: ${KAFKA1_HOST}:${KAFKA1_PORT_PLAINTEXT_INNER}, ${KAFKA2_HOST}:${KAFKA2_PORT_PLAINTEXT_INNER}
    listener:
      ack-mode: record
    consumer:
      auto-offset-reset: earliest
    producer:
      retries: 1000

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT_INNER}
      lifetime: ${REDIS_SUBJECT_LIFE_TIME}
      password: ${REDIS_PASSWORD}

  jpa:
    show-sql: true

method:
  runtime:
    limit: 10000

account:
  credit:
    start-balance: ${ACCOUNT_CREDIT_START_BALANCE}
  transaction:
    amount:
      min: ${ACCOUNT_TRANSACTION_MIN_AMOUNT}
      max: ${ACCOUNT_TRANSACTION_MAX_AMOUNT}
  balance:
    max: ${ACCOUNT_BALANCE_MAX_AMOUNT}

kafka:
  topic:
    metric:
      name: ${KAFKA_TOPIC_METRIC}
      transaction-id: metric-transaction-id
    replication-factor: ${KAFKA_TOPIC_REPLICATION_FACTOR}


server:
  port: ${TRANSACTION_SERVICE_PORT_INNER}
